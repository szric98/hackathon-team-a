import type { GetDataSetsQuery } from "@/__generated__/dashboards-api";

export const mockCategories: GetDataSetsQuery["dataSetTree"]["categories"] = [
  {
    id: "cat1",
    clientKey: "client1",
    categoryKey: "category1",
    label: "Category One",
    dataSets: [
      {
        id: "ds1",
        clientKey: "client1",
        dataSetKey: "dataset1",
        dataSetHash: "hash1",
        categoryKey: "category1",
        label: "DataSet One",
        ancestorsKeys: ["ancestor1", "ancestor2"],
        dataSetType: "ALL_DATA_SET",
        sprintInclusionRule: "ANY_SPRINT",
        completionRule: "PRIMARY",
        childrenKeys: ["child1", "child2"],
        entities: null,
      },
      {
        id: "ds2",
        clientKey: "client1",
        dataSetKey: "dataset2",
        dataSetHash: "hash2",
        categoryKey: "category1",
        label: "DataSet Two",
        ancestorsKeys: [],
        dataSetType: "ENTITY_DATA_SET",
        sprintInclusionRule: "ONLY_SPRINTS_IN_DATASET",
        completionRule: "SECONDARY",
        childrenKeys: [],
        entities: undefined,
      },
    ],
  },
  {
    id: "cat2",
    clientKey: "client2",
    categoryKey: "category2",
    label: "Category Two",
    dataSets: [
      {
        id: "ds3",
        clientKey: "client2",
        dataSetKey: "dataset3",
        dataSetHash: "hash3",
        label: "DataSet Three",
        ancestorsKeys: ["ancestor3"],
        dataSetType: "SUPER_DATA_SET",
        sprintInclusionRule: "ANY_SPRINT",
        completionRule: "PRIMARY",
        childrenKeys: ["child3"],
        entities: null,
      },
      {
        id: "ds4",
        clientKey: "client2",
        dataSetKey: "dataset4",
        dataSetHash: "hash4",
        label: "DataSet Four",
        ancestorsKeys: ["ancestor4"],
        dataSetType: "SUPER_ENTITY_DATA_SET",
        sprintInclusionRule: "ONLY_SPRINTS_IN_DATASET",
        completionRule: "SECONDARY",
        childrenKeys: [],
        entities: undefined,
      },
    ],
  },
];
